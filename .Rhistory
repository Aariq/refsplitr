geom_vline(aes(xintercept=325))+
theme_custom()  +
facet_wrap(~COMMON_NAME)+
scale_x_continuous(labels = function(x) format(as.Date(as.character(x), "%j"), "%d-%b"),
limits=c(200,365),
breaks=c(213,244,274,305,335))+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
strip.text=element_text(size=9),
axis.text.y=element_blank(),
axis.ticks = element_blank())+
ylab("Count Observed on \n MS/AL Coast"))
howr11 <- alms %>%
filter(COMMON_NAME=="House Wren") %>%
filter(YEAR == 2011) %>%
ggplot()+
geom_density(aes(x=YDAY), fill=colors[1],adjust=1/2)+
geom_vline(aes(xintercept=c(297)))+
theme_custom()+
facet_wrap(~COMMON_NAME)+
scale_x_continuous(labels = function(x) format(as.Date(as.character(x), "%j"), "%d-%b"),
limits=c(200,365),
breaks=c(213,244,274,305,335))+
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
strip.text=element_text(size=10),
axis.text.y=element_blank(),
axis.ticks = element_blank())
howr16 <- alms %>%
filter(COMMON_NAME=="House Wren") %>%
filter(YEAR==2016) %>%
ggplot()+
geom_density(aes(x=YDAY), fill=colors[1],adjust=1/2)+
geom_vline(aes(xintercept=c(223)))+
theme_custom()+
facet_wrap(~COMMON_NAME)+
scale_x_continuous(labels = function(x) format(as.Date(as.character(x), "%j"), "%d-%b"),
limits=c(200,365),
breaks=c(213,244,274,305,335))+
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
strip.text=element_text(size=10),
axis.text.y=element_blank(),
axis.ticks = element_blank())
(wwdo <- alms %>%
filter(COMMON_NAME=="White-winged Dove",
YEAR == 2011) %>%
ggplot()+
geom_density(aes(x=YDAY), fill=colors[2],adjust=1/2)+
geom_vline(aes(xintercept=297))+
theme_custom()+
facet_wrap(~COMMON_NAME)+
scale_x_continuous(labels = function(x) format(as.Date(as.character(x), "%j"), "%d-%b"),
limits=c(200,365),
breaks=c(213,244,274,305,335))+
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
strip.text=element_text(size=10),
axis.text.y=element_blank(),
axis.ticks = element_blank())+
ylab("Count Observed on \n MS/AL Coast"))
(amco <- alms %>%
filter(COMMON_NAME=="American Coot",
YEAR == 2011) %>%
ggplot()+
facet_wrap(~COMMON_NAME)+
geom_density(aes(x=YDAY), fill=colors[3],adjust=1/2)+
geom_vline(aes(xintercept=325))+
theme_custom()+
scale_x_continuous(labels = function(x) format(as.Date(as.character(x), "%j"), "%d-%b"),
limits=c(200,365),
breaks=c(213,244,274,305,335))+
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
strip.text=element_text(size=10),
axis.text.y=element_blank(),
axis.ticks = element_blank()))
cowplot::plot_grid(basw, howr11, howr16, swsp,
coye, mawr,   eame,   eaki,
brth, wwdo,   ybsa,   amco,
rows=3, align="v")
masterplot <_ cowplot::plot_grid(basw, howr11, howr16, swsp,
masterplot <- cowplot::plot_grid(basw, howr11, howr16, swsp,
coye, mawr,   eame,   eaki,
brth, wwdo,   ybsa,   amco,
rows=3, align="v")
?save_plot
save_plot(masterplot, file="many_panel_plot.jpeg", base_aspect_ratio=1.3)
cowplot::save_plot(masterplot, file="many_panel_plot.jpeg", base_aspect_ratio=1.3)
cowplot::save_plot(masterplot, file="many_panel_plot.jpeg", base_aspect_ratio=1.5)
colors <- RColorBrewer::brewer.pal(3, "PuOr")
colors[2] <- "grey"
colors[4] <- "#e66101"
(brth <- alms %>%
filter(COMMON_NAME=="Brown Thrasher",
YEAR == 2010) %>%
ggplot()+
geom_density(aes(x=YDAY), fill=colors[1],adjust=1/2)+
geom_vline(aes(xintercept=295))+
theme_custom()+
facet_wrap(~COMMON_NAME)+
scale_x_continuous(labels = function(x) format(as.Date(as.character(x), "%j"), "%d-%b"),
limits=c(200,365),
breaks=c(213,244,274,305,335))+
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
strip.text=element_text(size=10),
axis.text.y=element_blank(),
axis.ticks = element_blank())+
ylab("Count Observed on \n MS/AL Coast"))
(mawr <- alms %>%
filter(COMMON_NAME=="Marsh Wren",
YEAR == 2010) %>%
ggplot()+
geom_density(aes(x=YDAY), fill=colors[1],adjust=1/2)+
geom_vline(aes(xintercept=300))+
theme_custom()+
facet_wrap(~COMMON_NAME)+
scale_x_continuous(labels = function(x) format(as.Date(as.character(x), "%j"), "%d-%b"),
limits=c(200,365),
breaks=c(213,244,274,305,335))+
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
strip.text=element_text(size=10),
axis.text.y=element_blank(),
axis.ticks = element_blank()))
(swsp <- alms %>%
filter(COMMON_NAME=="Swamp Sparrow",
YEAR == 2010) %>%
ggplot()+
geom_density(aes(x=YDAY), fill=colors[1],adjust=1/2)+
geom_vline(aes(xintercept=297))+
theme_custom()+
facet_wrap(~COMMON_NAME)+
scale_x_continuous(labels = function(x) format(as.Date(as.character(x), "%j"), "%d-%b"),
limits=c(200,365),
breaks=c(213,244,274,305,335))+
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
strip.text=element_text(size=10),
axis.text.y=element_blank(),
axis.ticks = element_blank()))
(ybsa <- alms %>%
filter(COMMON_NAME=="Yellow-bellied Sapsucker",
YEAR == 2010) %>%
ggplot()+
geom_density(aes(x=YDAY), fill=colors[2],adjust=1/2)+
geom_vline(aes(xintercept=c(295)))+
geom_vline(aes(xintercept=c(300)))+
theme_custom()+
facet_wrap(~COMMON_NAME)+
scale_x_continuous(labels = function(x) format(as.Date(as.character(x), "%j"), "%d-%b"),
limits=c(200,365),
breaks=c(213,244,274,305,335))+
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
strip.text=element_text(size=7),
axis.text.y=element_blank(),
axis.ticks = element_blank()))
(eame <- alms %>%
filter(COMMON_NAME=="Eastern Meadowlark",
YEAR == 2010) %>%
ggplot()+
geom_density(aes(x=YDAY), fill=colors[1],adjust=1/2)+
geom_vline(aes(xintercept=314))+
theme_custom()+
facet_wrap(~COMMON_NAME)+
scale_x_continuous(labels = function(x) format(as.Date(as.character(x), "%j"), "%d-%b"),
limits=c(200,365),
breaks=c(213,244,274,305,335))+
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
strip.text=element_text(size=10),
axis.text.y=element_blank(),
axis.ticks = element_blank()))
(eaki <- alms %>%
filter(COMMON_NAME=="Eastern Kingbird",
YEAR == 2011) %>%
ggplot()+
geom_density(aes(x=YDAY), fill=colors[4],adjust=1/2)+
geom_vline(aes(xintercept=136))+
theme_custom()+
facet_wrap(~COMMON_NAME)+
scale_x_continuous(labels = function(x) format(as.Date(as.character(x), "%j"), "%d-%b"),
limits=c(32,181),
breaks=c(32,60,91,121,152))+
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
strip.text=element_text(size=10),
axis.text.y=element_blank(),
axis.ticks = element_blank()))
(basw <- alms %>%
filter(COMMON_NAME=="Barn Swallow",
YEAR == 2016) %>%
ggplot()+
geom_density(aes(x=YDAY), fill=colors[4],adjust=1/2)+
geom_vline(aes(xintercept=105))+
theme_custom()+
facet_wrap(~COMMON_NAME)+
scale_x_continuous(labels = function(x) format(as.Date(as.character(x), "%j"), "%d-%b"),
limits=c(32,181),
breaks=c(32,60,91,121,152))+
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
strip.text=element_text(size=10),
axis.text.y=element_blank(),
axis.ticks = element_blank())+
ylab("Count Observed on \n MS/AL Coast"))
(coye <- alms %>%
filter(COMMON_NAME=="Common Yellowthroat",
YEAR == 2011) %>%
ggplot()+
geom_density(aes(x=YDAY), fill=colors[1],adjust=1/2)+
geom_vline(aes(xintercept=325))+
theme_custom()  +
facet_wrap(~COMMON_NAME)+
scale_x_continuous(labels = function(x) format(as.Date(as.character(x), "%j"), "%d-%b"),
limits=c(200,365),
breaks=c(213,244,274,305,335))+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.title.y=element_blank(),
strip.text=element_text(size=9),
axis.text.y=element_blank(),
axis.ticks = element_blank())+
ylab("Count Observed on \n MS/AL Coast"))
howr11 <- alms %>%
filter(COMMON_NAME=="House Wren") %>%
filter(YEAR == 2011) %>%
ggplot()+
geom_density(aes(x=YDAY), fill=colors[1],adjust=1/2)+
geom_vline(aes(xintercept=c(297)))+
theme_custom()+
facet_wrap(~COMMON_NAME)+
scale_x_continuous(labels = function(x) format(as.Date(as.character(x), "%j"), "%d-%b"),
limits=c(200,365),
breaks=c(213,244,274,305,335))+
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
strip.text=element_text(size=10),
axis.text.y=element_blank(),
axis.ticks = element_blank())
howr16 <- alms %>%
filter(COMMON_NAME=="House Wren") %>%
filter(YEAR==2016) %>%
ggplot()+
geom_density(aes(x=YDAY), fill=colors[1],adjust=1/2)+
geom_vline(aes(xintercept=c(223)))+
theme_custom()+
facet_wrap(~COMMON_NAME)+
scale_x_continuous(labels = function(x) format(as.Date(as.character(x), "%j"), "%d-%b"),
limits=c(200,365),
breaks=c(213,244,274,305,335))+
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
strip.text=element_text(size=10),
axis.text.y=element_blank(),
axis.ticks = element_blank())
(wwdo <- alms %>%
filter(COMMON_NAME=="White-winged Dove",
YEAR == 2011) %>%
ggplot()+
geom_density(aes(x=YDAY), fill=colors[2],adjust=1/2)+
geom_vline(aes(xintercept=297))+
theme_custom()+
facet_wrap(~COMMON_NAME)+
scale_x_continuous(labels = function(x) format(as.Date(as.character(x), "%j"), "%d-%b"),
limits=c(200,365),
breaks=c(213,244,274,305,335))+
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
strip.text=element_text(size=10),
axis.text.y=element_blank(),
axis.ticks = element_blank())+
ylab("Count Observed on \n MS/AL Coast"))
(amco <- alms %>%
filter(COMMON_NAME=="American Coot",
YEAR == 2011) %>%
ggplot()+
facet_wrap(~COMMON_NAME)+
geom_density(aes(x=YDAY), fill=colors[3],adjust=1/2)+
geom_vline(aes(xintercept=325))+
theme_custom()+
scale_x_continuous(labels = function(x) format(as.Date(as.character(x), "%j"), "%d-%b"),
limits=c(200,365),
breaks=c(213,244,274,305,335))+
theme(axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.text.x=element_blank(),
strip.text=element_text(size=10),
axis.text.y=element_blank(),
axis.ticks = element_blank()))
masterplot <- cowplot::plot_grid(basw, eaki,howr11, howr16,
coye, mawr,   eame,   swsp,
brth, wwdo,   ybsa,   amco,
rows=3, align="v")
cowplot::save_plot(masterplot, file="many_panel_plot.jpeg", base_aspect_ratio=1.5)
leaflet() %>%
setView(lng = -92.358302, lat = 38.957147, zoom = 6) %>%
addTiles() %>%
addCircleMarkers(data=state,
~long, ~lat, popup = ~as.character(area),
label = ~as.character(area),
color = ~pal(sf),
group="state") %>%
addCircleMarkers(data=fed,
~long, ~lat, popup = ~as.character(area),
label = ~as.character(area),
color = ~pal(sf),
group="fed") %>%
addLayersControl(
baseGroups = c("(default)"),
overlayGroups = c("state", "fed"),
options = layersControlOptions(collapsed = FALSE)
)
library(leaflet)
library(maps)
library(sf)
library(tidyverse)
library(auriel)
sites <- data.frame(area = c('nvca','lbnwr',"fgca","slnwr","tsca","ccnwr",
"bkca","dcca","osca","tmpca"),
sf = c("state","fed","state","fed","state","fed",
"state","state","state","state"),
lat = c(40.083979,40.086189,39.700193,39.590943,
39.520186,39.258942,39.194173, 37.069277,
36.663006, 36.720828),
long = c(-95.243862,-95.046928,-93.358501,-93.195568,
-91.115087,-90.756951, -90.768015,-90.112259,
-90.138140,-89.320857))
state <- sites %>% filter(sf=="state")
fed <- sites %>% filter(sf=="fed")
mapStates = map("world", fill = TRUE, plot = FALSE)
pal <- colorFactor(c("navy", "red"), domain = c("state", "fed"))
leaflet() %>%
setView(lng = -92.358302, lat = 38.957147, zoom = 6) %>%
addTiles() %>%
addCircleMarkers(data=state,
~long, ~lat, popup = ~as.character(area),
label = ~as.character(area),
color = ~pal(sf),
group="state") %>%
addCircleMarkers(data=fed,
~long, ~lat, popup = ~as.character(area),
label = ~as.character(area),
color = ~pal(sf),
group="fed") %>%
addLayersControl(
baseGroups = c("(default)"),
overlayGroups = c("state", "fed"),
options = layersControlOptions(collapsed = FALSE)
)
m <- leaflet() %>%
setView(lng = -92.358302, lat = 38.957147, zoom = 6) %>%
addTiles() %>%
addCircleMarkers(data=state,
~long, ~lat, popup = ~as.character(area),
label = ~as.character(area),
color = ~pal(sf),
group="state") %>%
addCircleMarkers(data=fed,
~long, ~lat, popup = ~as.character(area),
label = ~as.character(area),
color = ~pal(sf),
group="fed") %>%
addLayersControl(
baseGroups = c("(default)"),
overlayGroups = c("state", "fed"),
options = layersControlOptions(collapsed = FALSE)
)
saveWidget(m, file="m.html")
library(htmlwidgets)
m <- leaflet() %>%
setView(lng = -92.358302, lat = 38.957147, zoom = 6) %>%
addTiles() %>%
addCircleMarkers(data=state,
~long, ~lat, popup = ~as.character(area),
label = ~as.character(area),
color = ~pal(sf),
group="state") %>%
addCircleMarkers(data=fed,
~long, ~lat, popup = ~as.character(area),
label = ~as.character(area),
color = ~pal(sf),
group="fed") %>%
addLayersControl(
baseGroups = c("(default)"),
overlayGroups = c("state", "fed"),
options = layersControlOptions(collapsed = FALSE)
)
saveWidget(m, file="m.html")
devtools::install_github("embruna/refnet")
devtools::install_github("embruna/refnet")
library(refnet)
devtools::install_github("embruna/refnet")
library(refnet)
devtools::install_github("embruna/refnet")
devtools::install_github("embruna/refnet")
library(refnet)
devtools::install_github("embruna/refnet")
usethis::browse_github_pat()
edit_r_environ()
usethis::edit_r_environ()
devtools::install_github("embruna/refnet")
install.packages("rlang")
devtools::install_github("embruna/refnet")
library(refnet)
devtools::install_github("embruna/refnet")
library(refnet)
setwd("refnet")
usethis::use_build_ignore("missing_addresses.csv")
context("parse out addresses, step 2 of authors clean")
test_that("addresses parse correctly, atleast logically", {
df<-data.frame(
address=c("Univ Sydney, Fac Vet Sci, Sch Life & Environm Sci,
Sydney, NSW, Australia.",
"Univ Toronto, Dept Ecol & Evolutionary Biol, Toronto, ON M5S 3B2, Canada.",
"Univ New South Wales, Evolut & Ecol Res Ctr, Sydney, NSW, Australia.",
"Univ New South Wales, Evolut & Ecol Res Ctr, Sydney, NSW, Australia.",
"Ryerson Univ, Dept Chem & Biol, Toronto, ON M5B 2K3, Canada.",
"Univ Sao Paulo, Inst Biociencias, Dept Zool, BECO, Rua Matao,Trav 14 321,
BR-05508090 Sao Paulo, Brazil.",
"Univ Sydney, Charles Perkins Ctr, Sydney, NSW, Australia."),
authorID=1:7,stringsAsFactors=FALSE)
actual<-authors_address(df$address, df$authorID)
expect_false(any(is.na(actual$country)))
expect_false(grepl('BR',actual$postal_code[actual$country=='Brazil']))
expect_equal(sum(grepl("[A-Z]{1}[0-9]{1}[A-Z]{1}\\s[0-9]{1}[A-Z]{1}[0-9]{1}",
actual$postal_code)),2)
expect_equal(unique(actual$country[grepl(
"[A-Z]{1}[0-9]{1}[A-Z]{1}\\s[0-9]{1}[A-Z]{1}[0-9]{1}",
actual$postal_code)]),'Canada')
})
install.packages("test_that")
install.packages("testthat")
library(testthat)
context("parse out addresses, step 2 of authors clean")
test_that("addresses parse correctly, atleast logically", {
df<-data.frame(
address=c("Univ Sydney, Fac Vet Sci, Sch Life & Environm Sci,
Sydney, NSW, Australia.",
"Univ Toronto, Dept Ecol & Evolutionary Biol, Toronto, ON M5S 3B2, Canada.",
"Univ New South Wales, Evolut & Ecol Res Ctr, Sydney, NSW, Australia.",
"Univ New South Wales, Evolut & Ecol Res Ctr, Sydney, NSW, Australia.",
"Ryerson Univ, Dept Chem & Biol, Toronto, ON M5B 2K3, Canada.",
"Univ Sao Paulo, Inst Biociencias, Dept Zool, BECO, Rua Matao,Trav 14 321,
BR-05508090 Sao Paulo, Brazil.",
"Univ Sydney, Charles Perkins Ctr, Sydney, NSW, Australia."),
authorID=1:7,stringsAsFactors=FALSE)
actual<-authors_address(df$address, df$authorID)
expect_false(any(is.na(actual$country)))
expect_false(grepl('BR',actual$postal_code[actual$country=='Brazil']))
expect_equal(sum(grepl("[A-Z]{1}[0-9]{1}[A-Z]{1}\\s[0-9]{1}[A-Z]{1}[0-9]{1}",
actual$postal_code)),2)
expect_equal(unique(actual$country[grepl(
"[A-Z]{1}[0-9]{1}[A-Z]{1}\\s[0-9]{1}[A-Z]{1}[0-9]{1}",
actual$postal_code)]),'Canada')
})
context("authors clean")
test_that("Output of clean_authors makes sense", {
df<-data.frame(filename=NA, AB=NA , AF=c('Smith, Jon J.','Thompson, Bob B.',
'Smith,J'), AU=c('Smith, Jon J.','Thompson, Bob','Smith, J'), BP=NA ,
C1=c("Univ Florida, Gainesville, FL USA","University of Texas, Austin, TX, USA",
NA),CR=NA,DE=NA, DI=NA, EM=c("j.smith@ufl.edu",NA,'jsmith@usgs.gov'),
EN=NA, FN=NA, FU=NA, PD=NA, PG=NA, PT=NA, PU=NA, PY=NA,
RI=c("Smith,Jon/H-9999-2012","Thompson,Bob/H-2222-2012",
"Smith,Jon/H-2769-2012"), OI=NA,PM=NA,
RP=c("Univ Florida, Gainesville, FL USA","University of Texas, Austin, TX, USA",
NA), SC=NA, SN=NA, SO=NA, TC=NA, TI=NA, UT=NA, VL=NA, WC=NA,Z9=NA,
refID=c(1,2,3) ,stringsAsFactors=F)
df[]<-lapply(df, as.character)
actual <- authors_clean(references=df,sim_score)
expect_is(actual, 'list')
expect_is(actual$prelim, 'data.frame')
expect_is(actual$review, 'data.frame')
expect_gt(nrow(actual$review),0)
expect_gt(nrow(actual$prelim),0)
expect_equal(actual$prelim$groupID,c(3,2,3))
expect_gt(min(actual$prelim$similarity,na.rm=T),0.88)
df<-data.frame(filename=NA, AB=NA , AF=c('Smith, Jon J.','Thompson, Bob B.',
'Smith,J'), AU=c('Smith, Jon J.','Thompson, Bob','Smith, J'), BP=NA ,
C1=c("Univ Florida, Gainesville, FL USA","University of Texas, Austin, TX, USA",
NA),CR=NA,DE=NA, DI=NA, EM=c("j.smith@ufl.edu",NA,'jsmith@usgs.gov'),
EN=NA, FN=NA, FU=NA, PD=NA, PG=NA, PT=NA, PU=NA, PY=NA,
RI=c("Smith,Jon/H-9999-2012","Thompson,Bob/H-2222-2012",
"Smith,Jon/H-2769-2012"), OI=NA,PM=NA,
RP=c("Univ Florida, Gainesville, FL USA","University of Texas, Austin, TX, USA",
NA), SC=NA, SN=NA, SO=NA, TC=NA, TI=NA, UT=NA, VL=NA, WC=NA,Z9=NA,
refID=c(1,2,3) ,stringsAsFactors=F)
df[]<-lapply(df, as.character)
actual <- authors_clean(references=df,sim_score, write_out_data = TRUE)
expect(file.exists("_authors_prelim.csv"))
expect(file.exists("_authors_review.csv"))
})
unlink("_authors_prelim.csv")
unlink("_authors_review.csv")
unlink("test_authors_refined.csv")
