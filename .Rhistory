pelagic= apply( frame3[frame3$pelagic==1,months],2,mean),
shorebird= apply( frame3[frame3$shorebird==1,months],2,mean),
passerine= apply( frame3[frame3$passerine==1,months],2,mean),
waterfowl= apply( frame3[frame3$waterfowl==1,months],2,mean),
warblers= apply( frame3[frame3$group=='Warblers',months],2,mean),
date=names(species.totals))
library(reshape)
#melt(final)
df1<-data.frame(species.totals=predict(smooth.spline(final[,c('vagrants')],lambda=0.001))$y,date=months,group=1)
df1$date<-factor(df1$date, levels=as.character(df1$date))
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ggtitle('vagrants')
##################
df1<-data.frame(species.totals=predict(smooth.spline(final[,c('migrant')],lambda=0.001))$y,date=months,group=1)
df1$date<-factor(df1$date, levels=as.character(df1$date))
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ggtitle('migrants')
###################
df1<-data.frame(species.totals=predict(smooth.spline(final[,c('shorebird')],lambda=0.001))$y,date=months,group=1)
df1$date<-factor(df1$date, levels=as.character(df1$date))
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ggtitle('shorebirds')
###################
df1<-data.frame(species=predict(smooth.spline(final[,c('waterfowl')],lambda=0.001))$y,date=months)
df1$date<-factor(df1$date, levels=as.character(df1$date))
ggplot(data=df1,aes(x=date,y=species)) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) +ggtitle('waterfowl')
##################
df1<-data.frame(species=predict(smooth.spline(final[,c('species.totals')],lambda=0.001))$y,date=months,group=1)
df1$date<-factor(df1$date, levels=as.character(df1$date))
ggplot(data=df1,aes(x=date,y=species,group=group)) + geom_point() +geom_line(aes(x=date,y=species))+ theme_bw()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
##################
df1<-data.frame(species=predict(smooth.spline(final[,c('warblers')],lambda=0.0005))$y,date=months,group=1)
df1$date<-factor(df1$date, levels=as.character(df1$date))
ggplot(data=df1,aes(x=date,y=species,group=group)) + geom_point() +geom_line(aes(x=date,y=species))+ theme_bw()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
###################
#species accumulation curves
df1<-data.frame(species.totals=predict(smooth.spline(apply(frame3[frame3$group=='Warblers',months],2,function(x)sum(x>0.01)),lambda=0.0005))$y,date=factor(months, levels=as.character(months)),group=1)
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
##################
#vagrant accu curve
df1<-data.frame(species.totals=predict(smooth.spline(apply(frame3[frame3$vagrant==1,months],2,function(x)sum(x>0.01)),lambda=0.0005))$y,date=factor(months, levels=as.character(months)),group=1)
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
##################
# warbler timing
filename<-'file:///C:/Users/birde/Dropbox/ebird/ebird_US-FL-086__1900_2018_1_12_barchart.txt'
ababase<-read.csv('file:///C:/Users/birde/Dropbox/ebird/ababase.csv',header=T)
threshold<-0.075
months<-paste0(rep(1:12,1,each=4),'.',1:4)
sub1<-read.delim(filename,skip=15,header=F,row.names=1)[,1:48]
sub1
nsample<-t(read.delim(filename,skip=14,nrow=1,header=F)[2:49])
colnames(sub1)<-months
head(ababase)
head(sub1)
sub1<-merge(ababase,sub1,,by.x='species',by.y=0)
plot(sapply(seq(.0001,.1,0.0002),function(x)sum(apply(sub1[,months],1,mean)>x))~seq(.0001,.1,0.0002))
sub2<-sub1
sub1<-sub1[apply(sub1[,months],1,mean)>0.00001,]
frame3<-sub1
#################
frame3<-frame3[order(frame3$SpeciesID),]
colnames(frame3)[1]<-'species'
#frame3<-frame3[,c('id','species','scientific','group','groupcode','raritycode','pelagic','shorebird','passerine','waterfowl',paste0(rep(1:12,1,each=4),'.',1:4))]
mincol<-min(grep('^1.1',colnames(frame3)))
maxcol<-max(grep('^12.4',colnames(frame3)))
##############################################
#############ID common birds#########
frame3$perennial<-0
frame3$perennial[apply(frame3[,mincol:maxcol]>0.01,1,sum)>=46]<-1
perennial<-frame3[frame3$perennial==1,]
###############################################
############ID rarities
frame3$vagrant<-0
frame3$vagrant[apply(frame3[,mincol:maxcol]<0.01,1,sum)>=44]<-1
vagrant<-frame3[frame3$vagrant==1,]
##############################################
#########uncommon fall
frame3$unfall<-0
frame3$unfall[apply(frame3[,grep('^8.4',colnames(frame3)):grep('^11.3',colnames(frame3))]<0.01,1,sum)>=9]<-1
unfall<-frame3[frame3$unfall==1,]
###############################################
##########common migrants?
frame3$migrant<-0
frame3$migrant[frame3$perennial==0&frame3$vagrant==0]<-1
migrant<-frame3[frame3$migrant==1,]
################################################
##########breeder?
#test<-frame3[apply((frame3[,mincol:maxcol]/apply(frame3[,mincol:maxcol],1,sum))[,grep('^6.1',colnames(frame3)):grep('^7.2',colnames(frame3))],1,sum)>.275,]
frame3$breeder<-0
#frame3$breeder[apply((frame3[,mincol:maxcol]/apply(frame3[,mincol:maxcol],1,sum))[,20:32],1,sum)>.275 & frame3$vagrant==0]<-1
frame3$breeder[apply(frame3[,grep('^5.1',colnames(frame3)):grep('^7.4',colnames(frame3))]>.01,1,sum)>=3 & frame3$vagrant==0]<-1
breeder<-frame3[frame3$breeder==1,]
breeder<-breeder[order(breeder$SpeciesID),]
################################################
##########winter?
frame3$winter<-0
frame3$winter[apply((frame3[,mincol:maxcol]/apply(frame3[,mincol:maxcol],1,sum))[,c(45:48,1:8)],1,sum)>.275 & frame3$vagrant==0]<-1
frame3$winter[apply(frame3[,c(grep('^11.4',colnames(frame3)):grep('^12.4',colnames(frame3)),grep('^1.1',colnames(frame3)):grep('^2.2',colnames(frame3)))]>.01,1,sum)>8]<-1
winter<-frame3[frame3$winter==1 & frame3$perennial==0,]
winter<-winter[order(winter$SpeciesID),]
################################################
##########transient migrant
frame3$tranmigrant<-0
frame3$tranmigrant[frame3$breeder==0&frame3$winter==0& frame3$migrant==1 &frame3$vagrant==0]<-1
tranmigrant<-frame3[frame3$tranmigrant==1,]
tranmigrant<-tranmigrant[order(tranmigrant$SpeciesID),]
################################################
#########resident migrants
frame3$resmigrant<-0
frame3$resmigrant[apply((frame3[,mincol:maxcol]/apply(frame3[,mincol:maxcol],1,sum))[,c(45:48,1:8)],1,sum)>.275 &frame3$perennial==1]<-1
resmigrant<-frame3[frame3$resmigrant==1,]
#test
species.totals<-sapply(months, function(x)sum(frame3[,x]>0.001))
plot(species.totals~months)
lines(species.totals~months)
#######################
library(ggplot2)
final<-data.frame(species.totals,
vagrants= apply( frame3[frame3$vagrant==1,months],2,mean),
migrant= apply( frame3[frame3$migrant==1,months],2,mean),
winter= apply( frame3[frame3$winter==1,months],2,mean),
pelagic= apply( frame3[frame3$pelagic==1,months],2,mean),
shorebird= apply( frame3[frame3$shorebird==1,months],2,mean),
passerine= apply( frame3[frame3$passerine==1,months],2,mean),
waterfowl= apply( frame3[frame3$waterfowl==1,months],2,mean),
warblers= apply( frame3[frame3$group=='Warblers',months],2,mean),
date=names(species.totals))
library(reshape)
#melt(final)
df1<-data.frame(species.totals=predict(smooth.spline(final[,c('vagrants')],lambda=0.001))$y,date=months,group=1)
df1$date<-factor(df1$date, levels=as.character(df1$date))
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ggtitle('vagrants')
##################
df1<-data.frame(species.totals=predict(smooth.spline(final[,c('migrant')],lambda=0.001))$y,date=months,group=1)
df1$date<-factor(df1$date, levels=as.character(df1$date))
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ggtitle('migrants')
###################
df1<-data.frame(species.totals=predict(smooth.spline(final[,c('shorebird')],lambda=0.001))$y,date=months,group=1)
df1$date<-factor(df1$date, levels=as.character(df1$date))
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ggtitle('shorebirds')
###################
df1<-data.frame(species=predict(smooth.spline(final[,c('waterfowl')],lambda=0.001))$y,date=months)
df1$date<-factor(df1$date, levels=as.character(df1$date))
ggplot(data=df1,aes(x=date,y=species)) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) +ggtitle('waterfowl')
##################
df1<-data.frame(species=predict(smooth.spline(final[,c('species.totals')],lambda=0.001))$y,date=months,group=1)
df1$date<-factor(df1$date, levels=as.character(df1$date))
ggplot(data=df1,aes(x=date,y=species,group=group)) + geom_point() +geom_line(aes(x=date,y=species))+ theme_bw()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
##################
df1<-data.frame(species=predict(smooth.spline(final[,c('warblers')],lambda=0.0005))$y,date=months,group=1)
df1$date<-factor(df1$date, levels=as.character(df1$date))
ggplot(data=df1,aes(x=date,y=species,group=group)) + geom_point() +geom_line(aes(x=date,y=species))+ theme_bw()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
###################
#species accumulation curves
df1<-data.frame(species.totals=predict(smooth.spline(apply(frame3[frame3$group=='Warblers',months],2,function(x)sum(x>0.01)),lambda=0.0005))$y,date=factor(months, levels=as.character(months)),group=1)
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
##################
#vagrant accu curve
df1<-data.frame(species.totals=predict(smooth.spline(apply(frame3[frame3$vagrant==1,months],2,function(x)sum(x>0.01)),lambda=0.0005))$y,date=factor(months, levels=as.character(months)),group=1)
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
##################
# warbler timing
df1<-data.frame(species.totals=predict(smooth.spline(apply(frame3[frame3$vagrant==1,months],2,function(x)sum(x>0.001)),lambda=0.0005))$y,date=factor(months, levels=as.character(months)),group=1)
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
df1<-data.frame(species.totals=predict(smooth.spline(apply(frame3[frame3$vagrant==1,months],2,function(x)sum(x>0.0001)),lambda=0.0005))$y,date=factor(months, levels=as.character(months)),group=1)
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
filename<-'file:///C:/Users/birde/Dropbox/ebird/ebird_US-FL-086__1900_2018_1_12_barchart.txt'
ababase<-read.csv('file:///C:/Users/birde/Dropbox/ebird/ababase.csv',header=T)
threshold<-0.075
months<-paste0(rep(1:12,1,each=4),'.',1:4)
sub1<-read.delim(filename,skip=15,header=F,row.names=1)[,1:48]
sub1
nsample<-t(read.delim(filename,skip=14,nrow=1,header=F)[2:49])
colnames(sub1)<-months
head(ababase)
head(sub1)
sub1<-merge(ababase,sub1,,by.x='species',by.y=0)
plot(sapply(seq(.0001,.1,0.0002),function(x)sum(apply(sub1[,months],1,mean)>x))~seq(.0001,.1,0.0002))
sub2<-sub1
sub1<-sub1[apply(sub1[,months],1,mean)>0.001,]
frame3<-sub1
filename<-'file:///C:/Users/birde/Dropbox/ebird/ebird_US-FL-086__1900_2018_1_12_barchart.txt'
ababase<-read.csv('file:///C:/Users/birde/Dropbox/ebird/ababase.csv',header=T)
threshold<-0.075
months<-paste0(rep(1:12,1,each=4),'.',1:4)
sub1<-read.delim(filename,skip=15,header=F,row.names=1)[,1:48]
sub1
nsample<-t(read.delim(filename,skip=14,nrow=1,header=F)[2:49])
colnames(sub1)<-months
head(ababase)
head(sub1)
sub1<-merge(ababase,sub1,,by.x='species',by.y=0)
plot(sapply(seq(.0001,.1,0.0002),function(x)sum(apply(sub1[,months],1,mean)>x))~seq(.0001,.1,0.0002))
sub2<-sub1
sub1<-sub1[apply(sub1[,months],1,mean)>0.0005,]
frame3<-sub1
#################
frame3<-frame3[order(frame3$SpeciesID),]
colnames(frame3)[1]<-'species'
#frame3<-frame3[,c('id','species','scientific','group','groupcode','raritycode','pelagic','shorebird','passerine','waterfowl',paste0(rep(1:12,1,each=4),'.',1:4))]
mincol<-min(grep('^1.1',colnames(frame3)))
maxcol<-max(grep('^12.4',colnames(frame3)))
##############################################
#############ID common birds#########
frame3$perennial<-0
frame3$perennial[apply(frame3[,mincol:maxcol]>0.01,1,sum)>=46]<-1
perennial<-frame3[frame3$perennial==1,]
###############################################
############ID rarities
frame3$vagrant<-0
frame3$vagrant[apply(frame3[,mincol:maxcol]<0.01,1,sum)>=44]<-1
vagrant<-frame3[frame3$vagrant==1,]
##############################################
#########uncommon fall
frame3$unfall<-0
frame3$unfall[apply(frame3[,grep('^8.4',colnames(frame3)):grep('^11.3',colnames(frame3))]<0.01,1,sum)>=9]<-1
unfall<-frame3[frame3$unfall==1,]
###############################################
##########common migrants?
frame3$migrant<-0
frame3$migrant[frame3$perennial==0&frame3$vagrant==0]<-1
migrant<-frame3[frame3$migrant==1,]
################################################
##########breeder?
#test<-frame3[apply((frame3[,mincol:maxcol]/apply(frame3[,mincol:maxcol],1,sum))[,grep('^6.1',colnames(frame3)):grep('^7.2',colnames(frame3))],1,sum)>.275,]
frame3$breeder<-0
#frame3$breeder[apply((frame3[,mincol:maxcol]/apply(frame3[,mincol:maxcol],1,sum))[,20:32],1,sum)>.275 & frame3$vagrant==0]<-1
frame3$breeder[apply(frame3[,grep('^5.1',colnames(frame3)):grep('^7.4',colnames(frame3))]>.01,1,sum)>=3 & frame3$vagrant==0]<-1
breeder<-frame3[frame3$breeder==1,]
breeder<-breeder[order(breeder$SpeciesID),]
################################################
##########winter?
frame3$winter<-0
frame3$winter[apply((frame3[,mincol:maxcol]/apply(frame3[,mincol:maxcol],1,sum))[,c(45:48,1:8)],1,sum)>.275 & frame3$vagrant==0]<-1
frame3$winter[apply(frame3[,c(grep('^11.4',colnames(frame3)):grep('^12.4',colnames(frame3)),grep('^1.1',colnames(frame3)):grep('^2.2',colnames(frame3)))]>.01,1,sum)>8]<-1
winter<-frame3[frame3$winter==1 & frame3$perennial==0,]
winter<-winter[order(winter$SpeciesID),]
################################################
##########transient migrant
frame3$tranmigrant<-0
frame3$tranmigrant[frame3$breeder==0&frame3$winter==0& frame3$migrant==1 &frame3$vagrant==0]<-1
tranmigrant<-frame3[frame3$tranmigrant==1,]
tranmigrant<-tranmigrant[order(tranmigrant$SpeciesID),]
################################################
#########resident migrants
frame3$resmigrant<-0
frame3$resmigrant[apply((frame3[,mincol:maxcol]/apply(frame3[,mincol:maxcol],1,sum))[,c(45:48,1:8)],1,sum)>.275 &frame3$perennial==1]<-1
resmigrant<-frame3[frame3$resmigrant==1,]
#test
species.totals<-sapply(months, function(x)sum(frame3[,x]>0.001))
plot(species.totals~months)
lines(species.totals~months)
#######################
library(ggplot2)
final<-data.frame(species.totals,
vagrants= apply( frame3[frame3$vagrant==1,months],2,mean),
migrant= apply( frame3[frame3$migrant==1,months],2,mean),
winter= apply( frame3[frame3$winter==1,months],2,mean),
pelagic= apply( frame3[frame3$pelagic==1,months],2,mean),
shorebird= apply( frame3[frame3$shorebird==1,months],2,mean),
passerine= apply( frame3[frame3$passerine==1,months],2,mean),
waterfowl= apply( frame3[frame3$waterfowl==1,months],2,mean),
warblers= apply( frame3[frame3$group=='Warblers',months],2,mean),
date=names(species.totals))
library(reshape)
#melt(final)
df1<-data.frame(species.totals=predict(smooth.spline(final[,c('vagrants')],lambda=0.001))$y,date=months,group=1)
df1$date<-factor(df1$date, levels=as.character(df1$date))
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ggtitle('vagrants')
##################
df1<-data.frame(species.totals=predict(smooth.spline(final[,c('migrant')],lambda=0.001))$y,date=months,group=1)
df1$date<-factor(df1$date, levels=as.character(df1$date))
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ggtitle('migrants')
###################
df1<-data.frame(species.totals=predict(smooth.spline(final[,c('shorebird')],lambda=0.001))$y,date=months,group=1)
df1$date<-factor(df1$date, levels=as.character(df1$date))
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ggtitle('shorebirds')
###################
df1<-data.frame(species=predict(smooth.spline(final[,c('waterfowl')],lambda=0.001))$y,date=months)
df1$date<-factor(df1$date, levels=as.character(df1$date))
ggplot(data=df1,aes(x=date,y=species)) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) +ggtitle('waterfowl')
##################
df1<-data.frame(species=predict(smooth.spline(final[,c('species.totals')],lambda=0.001))$y,date=months,group=1)
df1$date<-factor(df1$date, levels=as.character(df1$date))
ggplot(data=df1,aes(x=date,y=species,group=group)) + geom_point() +geom_line(aes(x=date,y=species))+ theme_bw()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
##################
df1<-data.frame(species=predict(smooth.spline(final[,c('warblers')],lambda=0.0005))$y,date=months,group=1)
df1$date<-factor(df1$date, levels=as.character(df1$date))
ggplot(data=df1,aes(x=date,y=species,group=group)) + geom_point() +geom_line(aes(x=date,y=species))+ theme_bw()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
###################
#species accumulation curves
df1<-data.frame(species.totals=predict(smooth.spline(apply(frame3[frame3$group=='Warblers',months],2,function(x)sum(x>0.01)),lambda=0.0005))$y,date=factor(months, levels=as.character(months)),group=1)
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
##################
#vagrant accu curve
df1<-data.frame(species.totals=predict(smooth.spline(apply(frame3[frame3$vagrant==1,months],2,function(x)sum(x>0.0001)),lambda=0.0005))$y,date=factor(months, levels=as.character(months)),group=1)
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
##################
# warbler timing
df1<-data.frame(species.totals=predict(smooth.spline(apply(frame3[frame3$vagrant==1,months],2,function(x)sum(x>0.001)),lambda=0.0005))$y,date=factor(months, levels=as.character(months)),group=1)
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
df1<-data.frame(species.totals=predict(smooth.spline(apply(frame3[frame3$vagrant==1,months],2,function(x)sum(x>0.005)),lambda=0.0005))$y,date=factor(months, levels=as.character(months)),group=1)
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
df1<-data.frame(species.totals=predict(smooth.spline(apply(frame3[frame3$vagrant==1,months],2,function(x)sum(x>0.001)),lambda=0.0005))$y,date=factor(months, levels=as.character(months)),group=1)
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
df1<-data.frame(species.totals=predict(smooth.spline(apply(frame3[frame3$vagrant==1,months],2,function(x)sum(x>0.005)),lambda=0.0005))$y,date=factor(months, levels=as.character(months)),group=1)
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
df1<-data.frame(species.totals=predict(smooth.spline(apply(frame3[frame3$vagrant==1,months],2,function(x)sum(x>0.0075)),lambda=0.0005))$y,date=factor(months, levels=as.character(months)),group=1)
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
df1<-data.frame(species.totals=predict(smooth.spline(apply(frame3[frame3$vagrant==1,months],2,function(x)sum(x>0.0025)),lambda=0.0005))$y,date=factor(months, levels=as.character(months)),group=1)
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
df1<-data.frame(species.totals=predict(smooth.spline(apply(frame3[frame3$group=='Warblers',months],2,function(x)sum(x>0.01)),lambda=0.0005))$y,date=factor(months, levels=as.character(months)),group=1)
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
df1<-data.frame(species=predict(smooth.spline(final[,c('species.totals')],lambda=0.001))$y,date=months,group=1)
df1$date<-factor(df1$date, levels=as.character(df1$date))
ggplot(data=df1,aes(x=date,y=species,group=group)) + geom_point() +geom_line(aes(x=date,y=species))+ theme_bw()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=df1,aes(x=date,y=species,group=group)) + geom_point() +geom_line(aes(x=date,y=species))+ theme_bw()+theme(axis.text.x = element_text(angle = 90, hjust = 1)) +ggtitle('Total Species')
df1<-data.frame(species=predict(smooth.spline(final[,c('warblers')],lambda=0.0005))$y,date=months,group=1)
df1$date<-factor(df1$date, levels=as.character(df1$date))
ggplot(data=df1,aes(x=date,y=species,group=group)) + geom_point() +geom_line(aes(x=date,y=species))+ theme_bw()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
df1<-data.frame(species.totals=predict(smooth.spline(apply(frame3[frame3$group=='Warblers',months],2,function(x)sum(x>0.01)),lambda=0.0005))$y,date=factor(months, levels=as.character(months)),group=1)
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
df1<-data.frame(species=predict(smooth.spline(final[,c('waterfowl')],lambda=0.001))$y,date=months)
df1$date<-factor(df1$date, levels=as.character(df1$date))
ggplot(data=df1,aes(x=date,y=species)) + geom_point() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) +ggtitle('waterfowl')
df1<-data.frame(species.totals=predict(smooth.spline(final[,c('shorebird')],lambda=0.001))$y,date=months,group=1)
df1$date<-factor(df1$date, levels=as.character(df1$date))
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ggtitle('shorebirds')
df1<-data.frame(species.totals=predict(smooth.spline(apply(frame3[frame3$vagrant==1,months],2,function(x)sum(x>0.0025)),lambda=0.0005))$y,date=factor(months, levels=as.character(months)),group=1)
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))
df1<-data.frame(species.totals=predict(smooth.spline(final[,c('migrant')],lambda=0.001))$y,date=months,group=1)
df1$date<-factor(df1$date, levels=as.character(df1$date))
ggplot(data=df1,aes(x=date,y=species.totals,group=group)) + geom_point() +geom_line(aes(x=date,y=species.totals))+ theme_classic()+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ggtitle('migrants')
#devtools::load_all('C:/Users/birde/Downloads/refnet2-master (1)/refnet2-master/refnet')
#references<-read.csv("file:///C:/Users/birde/Downloads/refnet2-master/refnet2-master_references.csv",stringsAsFactors=F)
#library(RecordLinkage)
library(dplyr)
library(RecordLinkage)
library(refnet)
setwd("C:/Users/birde/Downloads/refnet2-master (4)/refnet2-master")
#options(warn=2)
ptm <- proc.time()
#references<-references_read(data="./data/LatAmSci_RawData" ,dir=T, filename_root="./test")
references<-references_read(data="./data/EBpubs.txt" ,dir=F, filename_root="./output/test")
#references<-read.csv('C:/Users/birde/Downloads/refnet2-master (3)/refnet2-master/test_references.csv',stringsAsFactors=F)
big<-authors_clean(references,filename_root='./test')
master<-big$prelim
authors<-big$review
output<-authors_refine(authors,master,filename_root='./test',sim_score=0.95)
#output<-read.csv("C:/Users/birde/Downloads/refnet2-master (3)/refnet2-master/test_authors_final.csv")
zz <- authors_georef(data=master)
here4<-zz$addresses
r<-plot_addresses_points(data=zz$addresses)
r
proc.time()-ptm
#bi
write.csv(zz, 'C:/Users/birde/Downloads/refnet2-master/refnet2-master/output/test_address.csv')
zz<-read.csv('C:/Users/birde/Downloads/refnet2-master/refnet2-master/output/test_address.csv')
library(devtools)
library(tidyverse)
library(stringr)
#output<-read.csv("C:/Users/birde/Downloads/refnet2-master (3)/refnet2-master/test_authors_final.csv")
zz <- authors_georef(data=master)
authors_georef
#output<-read.csv("C:/Users/birde/Downloads/refnet2-master (3)/refnet2-master/test_authors_final.csv")
zz <- authors_georef(data=master,retry_limit=1)
here4<-zz$addresses
r<-plot_addresses_points(data=zz$addresses)
r
proc.time()-ptm
df<-data.frame("authorID"=c(1,2,3),
"AU"= c('Smith, Jon J.','Thompson, Bob B.','Smith,J'),
"AF"= c('Smith, Jon J.','Thompson, Bob B.','Smith,J'),
"groupID"= c(3,2,3),
"match_name"=c('Smith,J',NA,'Smith, Jon J'),
"similarity"= c(0.8833333,NA,0.8833333),
"author_order"= c(1,2,1),
"address"=c("Univ Florida, Gainesville, FL USA","University of Texas, Austin, TX, USA",NA),
"RP_address"=c("Univ Florida, Gainesville, FL USA","University of Oxford, Oxfordshire, UK","University of California Berkley, Berkley, CA, USA"),
"RI"=NA,
"OI"=NA,
"EM"=c("j.smith@ufl.edu",NA,'jsmith@usgs.gov'),
"refID"=c(1,1,3),
"TA"=NA,
"SO"=NA,
"UT"=c('test1','test1','test2'),
"PT"=NA,
"PU"=NA,
"PY"=NA,
"university"=c('Univ Florida','University of Oxford',"University of California"),
"country"=c('USA','United Kingdom',"USA"),
"state"=c('FL','Oxfordshire',"CA"),
"postal_code"=NA,
"city"=c('Gainesville','Oxford',"Berkley"),
"department"=NA ,
"lat"=c(35,51.7520,39),
"lon"=c(-100,1.2577,-80),
stringsAsFactors=F )
a<-plot_addresses_points(data=df)
a
nrow(a$layers[[1]]$data)
b<-plot_addresses_country(data=df)
nrow(b$layers[[1]]$data)
c<-plot_net_address(data=df)
c
d<-plot_net_coauthor(data=df)
e<-plot_net_country(data=df)
e
a
vdiffr::expect_doppelganger("test_plot_addresses", a)
a
library("ggplot2")
disp_hist_ggplot <- ggplot(mtcars, aes(disp)) + geom_histogram()
expect_doppelganger("disp-histogram-ggplot", disp_hist_ggplot)
library(vdiffr)
disp_hist_ggplot <- ggplot(mtcars, aes(disp)) + geom_histogram()
expect_doppelganger("disp-histogram-ggplot", disp_hist_ggplot)
expect_doppelganger("disp-histogram-ggplot", disp_hist_ggplot)
expect_doppelganger("disp-histogram-ggplot", a)
expect_doppelganger("disp-histogram-ggplot", b)
expect_doppelganger("disp-histogram-ggplot", c)
expect_doppelganger("disp-histogram-ggplot", a,verbose=T)
svg('test_plot_addresses.svg')
a
dev.off()
vdiffr::expect_doppelganger("test_plot_addresses", a)
expect_doppelganger("test_plot_addresses", b)
expect_doppelganger("test_plot_addresses", c)
expect_doppelganger("test_plot_addresses", disp_hist_ggplot)
expect_doppelganger("test_plot_addresses", disp_hist_ggplot)
expect_doppelganger("test_plot_addresses.svg", disp_hist_ggplot)
expect_doppelganger("test_plot_addresses.svg", disp_hist_ggplot,path='')
collect_case()
collect_cases()
collect_cases('refnet')
collect_cases('refnet')
N
'N'
expect_doppelganger("test_plot_addresses.svg",a)
setwd('C:/Users/birde/Dropbox/refnet/git/refnet')
collect_cases()
collect_cases()
collect_cases()
expect_doppelganger("test_plot_addresses",a)
vallidate_cases()
validate_cases()
validate_cases()
validate_cases()
plot_net_coauthor(data=df)
View(zz)
dd<-read.csv('file:///C:/Users/birde/Downloads/refnet2-master (4)/refnet2-master/data/EBpubs.txt')
dd<-read.table('file:///C:/Users/birde/Downloads/refnet2-master (4)/refnet2-master/data/EBpubs.txt')
dd<-read.table('C:/Users/birde/Downloads/refnet2-master (4)/refnet2-master/data/EBpubs.txt')
system.file("extdata", "PubExample", package = "refnet")
library("refnet", lib.loc="~/R/win-library/3.4")
?refnet
??refnet
references_read(data='tests/extdata/PubExample.txt' ,dir=F)
d<0references_read(data='tests/extdata/PubExample.txt' ,dir=F)
d<-references_read(data='tests/extdata/PubExample.txt' ,dir=F)
View(d)
expect_equal(nrow(d),10)
expect_equal(ncol(d),32)
View(d)
!is.na(d$AF)
any(is.na(d$AF))
expect_false(all(is.na(d$AF)))
all(is.na(d$AF))
any(is.na(d$AF))
expect_false(any(is.na(d$AF)))
expect_equal(d$refID,1:10)
expect_equal(d$refID,1:12)
expect_equal(d$refID,2:11)
expect_equal(d$refID,1:10)
View(r)
class(d)
sapply(d,class)
sapply(d,class)=='character'
sapply(d,class)!='factor'
class(factor(1))
class(factor(1))=='factor'
any(sapply(d,class)!='factor')
validate_cases()
validate_cases()
validate_cases()
last_collection_error()
validate_cases()
validate_cases()
last_collection_error()
validate_cases()
last_collection_error()
validate_cases()
last_collection_error()
print(dir)
print(dir())
validate_cases()
validate_cases()
validate_cases()
validate_cases()
validate_cases()
dir('.../')
dir('../')
print(dir('/../'))
print(dir('../'))
print(dir('./../'))
print(dir('../../'))
validate_cases()
validate_cases()
print(dir('../../inst/extdata'))
validate_cases()
print(dir('../../inst/'))
print(dir('../../'))
print(dir('../../git'))
print(dir('../../git/refnet'))
validate_cases()
